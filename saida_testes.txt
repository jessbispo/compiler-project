iniciando execucao dos testes em 'testes'...
==============================================
rodando teste: testes/teste-COMENTARIO.mp
╔════════════════════════════════════════════════════════╗
║        COMPILADOR MINIPASCAL - VERSAO COMPLETA        ║
║              Análise Lexica e Sintática               ║
╚════════════════════════════════════════════════════════╝

Arquivo fonte: testes/teste-COMENTARIO.mp
Arquivo de tokens: tokens.txt

=== INICIANDO ANÁLISE LeXICA ===

1# PALAVRA_RESERVADA | program


=== INICIANDO ANALISE SINTATICA ===

1# IDENTIFICADOR | correto
1# ; | ;
5# PALAVRA_RESERVADA | var
5# IDENTIFICADOR | a
5# , | ,
5# IDENTIFICADOR | b
5# , | ,
5# IDENTIFICADOR | c
5# : | :
5# PALAVRA_RESERVADA | integer
5# ; | ;
6# PALAVRA_RESERVADA | var
6# IDENTIFICADOR | d
6# , | ,
6# IDENTIFICADOR | e
6# , | ,
6# IDENTIFICADOR | f
6# : | :
6# PALAVRA_RESERVADA | boolean
6# ; | ;
7# PALAVRA_RESERVADA | procedure
7# IDENTIFICADOR | proc
7# ( | (
7# PALAVRA_RESERVADA | var
7# IDENTIFICADOR | a1
7# : | :
7# PALAVRA_RESERVADA | integer
7# ) | )
7# ; | ;
8# PALAVRA_RESERVADA | var
8# IDENTIFICADOR | a
8# , | ,
8# IDENTIFICADOR | b
8# , | ,
8# IDENTIFICADOR | c
8# : | :
8# PALAVRA_RESERVADA | integer
8# ; | ;
9# PALAVRA_RESERVADA | var
9# IDENTIFICADOR | d
9# , | ,
9# IDENTIFICADOR | e
9# , | ,
9# IDENTIFICADOR | f
9# : | :
9# PALAVRA_RESERVADA | boolean
9# ; | ;
10# PALAVRA_RESERVADA | begin
11# IDENTIFICADOR | a
11# := | :=
11# NUMERO | 1
11# ; | ;
12# PALAVRA_RESERVADA | if
12# ( | (
12# IDENTIFICADOR | a
12# < | <
12# NUMERO | 1
12# ) | )
12# PALAVRA_RESERVADA | then
13# IDENTIFICADOR | a
13# := | :=
13# NUMERO | 12
13# ; | ;
14# PALAVRA_RESERVADA | end
14# ; | ;
15# PALAVRA_RESERVADA | begin
16# IDENTIFICADOR | a
16# := | :=
16# NUMERO | 2
16# ; | ;
17# IDENTIFICADOR | b
17# := | :=
17# NUMERO | 10
17# ; | ;
18# IDENTIFICADOR | c
18# := | :=
18# NUMERO | 11
18# ; | ;
19# IDENTIFICADOR | a
19# := | :=
19# IDENTIFICADOR | b
19# + | +
19# IDENTIFICADOR | c
19# ; | ;
20# IDENTIFICADOR | d
20# := | :=
20# PALAVRA_RESERVADA | true
20# ; | ;
21# IDENTIFICADOR | e
21# := | :=
21# PALAVRA_RESERVADA | false
21# ; | ;
22# IDENTIFICADOR | f
22# := | :=
22# PALAVRA_RESERVADA | true
22# ; | ;
23# IDENTIFICADOR | write
23# ( | (
23# IDENTIFICADOR | b
23# ) | )
23# ; | ;
24# PALAVRA_RESERVADA | if
24# ( | (
24# IDENTIFICADOR | d
24# ) | )
24# PALAVRA_RESERVADA | then
25# PALAVRA_RESERVADA | begin
26# IDENTIFICADOR | a
26# := | :=
26# NUMERO | 20
26# ; | ;
27# IDENTIFICADOR | b
27# := | :=
27# NUMERO | 10
27# * | *
27# IDENTIFICADOR | c
27# ; | ;
28# IDENTIFICADOR | c
28# := | :=
28# IDENTIFICADOR | a
28# PALAVRA_RESERVADA | div
28# IDENTIFICADOR | b
28# ; | ;
29# PALAVRA_RESERVADA | end
29# ; | ;
30# PALAVRA_RESERVADA | while
30# ( | (
30# IDENTIFICADOR | a
30# > | >
30# NUMERO | 1
30# ) | )
30# PALAVRA_RESERVADA | do
31# PALAVRA_RESERVADA | begin
32# PALAVRA_RESERVADA | if
32# ( | (
32# IDENTIFICADOR | b
32# > | >
32# NUMERO | 10
32# ) | )
32# PALAVRA_RESERVADA | then
33# IDENTIFICADOR | b
33# := | :=
33# NUMERO | 2
33# ; | ;
34# IDENTIFICADOR | a
34# := | :=
34# IDENTIFICADOR | a
34# - | -
34# NUMERO | 1
34# ; | ;
35# PALAVRA_RESERVADA | end
35# ; | ;
36# PALAVRA_RESERVADA | end
36# . | .
36# EOF | EOF

=== ANALISE CONCLUIDA COM SUCESSO! ===
Programa sintaticamente correto.

╔════════════════════════════════════════════════════════╗
║                  COMPILAÇAO CONCLUIDA                  ║
║           Arquivo de tokens gerado com sucesso         ║
╚════════════════════════════════════════════════════════╝
teste 'testes/teste-COMENTARIO.mp' executado com sucesso
----------------------------------------------
rodando teste: testes/teste-erro-BEGIN6ou7.mp
╔════════════════════════════════════════════════════════╗
║        COMPILADOR MINIPASCAL - VERSAO COMPLETA        ║
║              Análise Lexica e Sintática               ║
╚════════════════════════════════════════════════════════╝

Arquivo fonte: testes/teste-erro-BEGIN6ou7.mp
Arquivo de tokens: tokens.txt

=== INICIANDO ANÁLISE LeXICA ===

1# PALAVRA_RESERVADA | program


=== INICIANDO ANALISE SINTATICA ===

1# IDENTIFICADOR | correto
1# ; | ;
2# PALAVRA_RESERVADA | var
2# IDENTIFICADOR | a
2# , | ,
2# IDENTIFICADOR | b
2# , | ,
2# IDENTIFICADOR | c
2# : | :
2# PALAVRA_RESERVADA | integer
2# ; | ;
3# PALAVRA_RESERVADA | var
3# IDENTIFICADOR | d
3# , | ,
3# IDENTIFICADOR | e
3# , | ,
3# IDENTIFICADOR | f
3# : | :
3# PALAVRA_RESERVADA | boolean
3# ; | ;
4# PALAVRA_RESERVADA | procedure
4# IDENTIFICADOR | proc
4# ( | (
4# PALAVRA_RESERVADA | var
4# IDENTIFICADOR | a1
4# : | :
4# PALAVRA_RESERVADA | integer
4# ) | )
4# ; | ;
5# PALAVRA_RESERVADA | var
5# IDENTIFICADOR | a
5# , | ,
5# IDENTIFICADOR | b
5# , | ,
5# IDENTIFICADOR | c
5# : | :
5# PALAVRA_RESERVADA | integer
5# ; | ;
6# PALAVRA_RESERVADA | var
6# IDENTIFICADOR | d
6# , | ,
6# IDENTIFICADOR | e
6# , | ,
6# IDENTIFICADOR | f
6# : | :
6# PALAVRA_RESERVADA | boolean
6# ; | ;
7# IDENTIFICADOR | a

ERRO SINTÁTICO na linha 7:
  Esperado: begin
  Encontrado: IDENTIFICADOR ('a')
teste 'testes/teste-erro-BEGIN6ou7.mp' retornou erro (código 1)
----------------------------------------------
rodando teste: testes/teste-erro-BEGINPV7.txt
╔════════════════════════════════════════════════════════╗
║        COMPILADOR MINIPASCAL - VERSAO COMPLETA        ║
║              Análise Lexica e Sintática               ║
╚════════════════════════════════════════════════════════╝

Arquivo fonte: testes/teste-erro-BEGINPV7.txt
Arquivo de tokens: tokens.txt

=== INICIANDO ANÁLISE LeXICA ===

1# PALAVRA_RESERVADA | program


=== INICIANDO ANALISE SINTATICA ===

1# IDENTIFICADOR | correto
1# ; | ;
2# PALAVRA_RESERVADA | var
2# IDENTIFICADOR | a
2# , | ,
2# IDENTIFICADOR | b
2# , | ,
2# IDENTIFICADOR | c
2# : | :
2# PALAVRA_RESERVADA | integer
2# ; | ;
3# PALAVRA_RESERVADA | var
3# IDENTIFICADOR | d
3# , | ,
3# IDENTIFICADOR | e
3# , | ,
3# IDENTIFICADOR | f
3# : | :
3# PALAVRA_RESERVADA | boolean
3# ; | ;
4# PALAVRA_RESERVADA | procedure
4# IDENTIFICADOR | proc
4# ( | (
4# PALAVRA_RESERVADA | var
4# IDENTIFICADOR | a1
4# : | :
4# PALAVRA_RESERVADA | integer
4# ) | )
4# ; | ;
5# PALAVRA_RESERVADA | var
5# IDENTIFICADOR | a
5# , | ,
5# IDENTIFICADOR | b
5# , | ,
5# IDENTIFICADOR | c
5# : | :
5# PALAVRA_RESERVADA | integer
5# ; | ;
6# PALAVRA_RESERVADA | var
6# IDENTIFICADOR | d
6# , | ,
6# IDENTIFICADOR | e
6# , | ,
6# IDENTIFICADOR | f
6# : | :
6# PALAVRA_RESERVADA | boolean
6# ; | ;
7# PALAVRA_RESERVADA | begin
7# ; | ;

ERRO SINTATICO na linha 7:
  Comando invalido: ;
teste 'testes/teste-erro-BEGINPV7.txt' retornou erro (código 1)
----------------------------------------------
rodando teste: testes/teste-erro-CHAVES4.mp
╔════════════════════════════════════════════════════════╗
║        COMPILADOR MINIPASCAL - VERSAO COMPLETA        ║
║              Análise Lexica e Sintática               ║
╚════════════════════════════════════════════════════════╝

Arquivo fonte: testes/teste-erro-CHAVES4.mp
Arquivo de tokens: tokens.txt

=== INICIANDO ANÁLISE LeXICA ===

1# PALAVRA_RESERVADA | program


=== INICIANDO ANALISE SINTATICA ===

1# IDENTIFICADOR | correto
1# ; | ;
2# PALAVRA_RESERVADA | var
2# IDENTIFICADOR | a
2# , | ,
2# IDENTIFICADOR | b
2# , | ,
2# IDENTIFICADOR | c
2# : | :
2# PALAVRA_RESERVADA | integer
2# ; | ;
3# PALAVRA_RESERVADA | var
3# IDENTIFICADOR | d
3# , | ,
3# IDENTIFICADOR | e
3# , | ,
3# IDENTIFICADOR | f
3# : | :
3# PALAVRA_RESERVADA | boolean
3# ; | ;
4# PALAVRA_RESERVADA | procedure
4# IDENTIFICADOR | proc
ERRO LeXICO: caractere inválido '{' (ASCII 123) na linha 4
teste 'testes/teste-erro-CHAVES4.mp' retornou erro (código 1)
----------------------------------------------
rodando teste: testes/teste-erro-END10ou11.mp
╔════════════════════════════════════════════════════════╗
║        COMPILADOR MINIPASCAL - VERSAO COMPLETA        ║
║              Análise Lexica e Sintática               ║
╚════════════════════════════════════════════════════════╝

Arquivo fonte: testes/teste-erro-END10ou11.mp
Arquivo de tokens: tokens.txt

=== INICIANDO ANÁLISE LeXICA ===

1# PALAVRA_RESERVADA | program


=== INICIANDO ANALISE SINTATICA ===

1# IDENTIFICADOR | correto
1# ; | ;
2# PALAVRA_RESERVADA | var
2# IDENTIFICADOR | a
2# , | ,
2# IDENTIFICADOR | b
2# , | ,
2# IDENTIFICADOR | c
2# : | :
2# PALAVRA_RESERVADA | integer
2# ; | ;
3# PALAVRA_RESERVADA | var
3# IDENTIFICADOR | d
3# , | ,
3# IDENTIFICADOR | e
3# , | ,
3# IDENTIFICADOR | f
3# : | :
3# PALAVRA_RESERVADA | boolean
3# ; | ;
4# PALAVRA_RESERVADA | procedure
4# IDENTIFICADOR | proc
4# ( | (
4# PALAVRA_RESERVADA | var
4# IDENTIFICADOR | a1
4# : | :
4# PALAVRA_RESERVADA | integer
4# ) | )
4# ; | ;
5# PALAVRA_RESERVADA | var
5# IDENTIFICADOR | a
5# , | ,
5# IDENTIFICADOR | b
5# , | ,
5# IDENTIFICADOR | c
5# : | :
5# PALAVRA_RESERVADA | integer
5# ; | ;
6# PALAVRA_RESERVADA | var
6# IDENTIFICADOR | d
6# , | ,
6# IDENTIFICADOR | e
6# , | ,
6# IDENTIFICADOR | f
6# : | :
6# PALAVRA_RESERVADA | boolean
6# ; | ;
7# PALAVRA_RESERVADA | begin
8# IDENTIFICADOR | a
8# := | :=
8# NUMERO | 1
8# ; | ;
9# PALAVRA_RESERVADA | if
9# ( | (
9# IDENTIFICADOR | a
9# < | <
9# NUMERO | 1
9# ) | )
9# PALAVRA_RESERVADA | then
10# IDENTIFICADOR | a
10# := | :=
10# NUMERO | 12
10# ; | ;
11# PALAVRA_RESERVADA | begin
12# IDENTIFICADOR | a
12# := | :=
12# NUMERO | 2
12# ; | ;
13# IDENTIFICADOR | b
13# := | :=
13# NUMERO | 10
13# ; | ;
14# IDENTIFICADOR | c
14# := | :=
14# NUMERO | 11
14# ; | ;
15# IDENTIFICADOR | a
15# := | :=
15# IDENTIFICADOR | b
15# + | +
15# IDENTIFICADOR | c
15# ; | ;
16# IDENTIFICADOR | d
16# := | :=
16# PALAVRA_RESERVADA | true
16# ; | ;
17# IDENTIFICADOR | e
17# := | :=
17# PALAVRA_RESERVADA | false
17# ; | ;
18# IDENTIFICADOR | f
18# := | :=
18# PALAVRA_RESERVADA | true
18# ; | ;
19# IDENTIFICADOR | write
19# ( | (
19# IDENTIFICADOR | b
19# ) | )
19# ; | ;
20# PALAVRA_RESERVADA | if
20# ( | (
20# IDENTIFICADOR | d
20# ) | )
20# PALAVRA_RESERVADA | then
21# PALAVRA_RESERVADA | begin
22# IDENTIFICADOR | a
22# := | :=
22# NUMERO | 20
22# ; | ;
23# IDENTIFICADOR | b
23# := | :=
23# NUMERO | 10
23# * | *
23# IDENTIFICADOR | c
23# ; | ;
24# IDENTIFICADOR | c
24# := | :=
24# IDENTIFICADOR | a
24# PALAVRA_RESERVADA | div
24# IDENTIFICADOR | b
24# ; | ;
25# PALAVRA_RESERVADA | end
25# ; | ;
26# PALAVRA_RESERVADA | while
26# ( | (
26# IDENTIFICADOR | a
26# > | >
26# NUMERO | 1
26# ) | )
26# PALAVRA_RESERVADA | do
27# PALAVRA_RESERVADA | begin
28# PALAVRA_RESERVADA | if
28# ( | (
28# IDENTIFICADOR | b
28# > | >
28# NUMERO | 10
28# ) | )
28# PALAVRA_RESERVADA | then
29# IDENTIFICADOR | b
29# := | :=
29# NUMERO | 2
29# ; | ;
30# IDENTIFICADOR | a
30# := | :=
30# IDENTIFICADOR | a
30# - | -
30# NUMERO | 1
30# ; | ;
31# PALAVRA_RESERVADA | end
31# ; | ;
32# PALAVRA_RESERVADA | end
32# . | .

ERRO SINTÁTICO na linha 32:
  Esperado: end
  Encontrado: . ('.')
teste 'testes/teste-erro-END10ou11.mp' retornou erro (código 1)
----------------------------------------------
rodando teste: testes/teste-erro-FLOAT8.mp
╔════════════════════════════════════════════════════════╗
║        COMPILADOR MINIPASCAL - VERSAO COMPLETA        ║
║              Análise Lexica e Sintática               ║
╚════════════════════════════════════════════════════════╝

Arquivo fonte: testes/teste-erro-FLOAT8.mp
Arquivo de tokens: tokens.txt

=== INICIANDO ANÁLISE LeXICA ===

1# PALAVRA_RESERVADA | program


=== INICIANDO ANALISE SINTATICA ===

1# IDENTIFICADOR | correto
1# ; | ;
2# PALAVRA_RESERVADA | var
2# IDENTIFICADOR | a
2# , | ,
2# IDENTIFICADOR | b
2# , | ,
2# IDENTIFICADOR | c
2# : | :
2# PALAVRA_RESERVADA | integer
2# ; | ;
3# PALAVRA_RESERVADA | var
3# IDENTIFICADOR | d
3# , | ,
3# IDENTIFICADOR | e
3# , | ,
3# IDENTIFICADOR | f
3# : | :
3# PALAVRA_RESERVADA | boolean
3# ; | ;
4# PALAVRA_RESERVADA | procedure
4# IDENTIFICADOR | proc
4# ( | (
4# PALAVRA_RESERVADA | var
4# IDENTIFICADOR | a1
4# : | :
4# PALAVRA_RESERVADA | integer
4# ) | )
4# ; | ;
5# PALAVRA_RESERVADA | var
5# IDENTIFICADOR | a
5# , | ,
5# IDENTIFICADOR | b
5# , | ,
5# IDENTIFICADOR | c
5# : | :
5# PALAVRA_RESERVADA | integer
5# ; | ;
6# PALAVRA_RESERVADA | var
6# IDENTIFICADOR | d
6# , | ,
6# IDENTIFICADOR | e
6# , | ,
6# IDENTIFICADOR | f
6# : | :
6# PALAVRA_RESERVADA | boolean
6# ; | ;
7# PALAVRA_RESERVADA | begin
8# IDENTIFICADOR | a
8# := | :=
8# NUMERO | 1
8# , | ,

ERRO SINTÁTICO na linha 8:
  Esperado: end
  Encontrado: , (',')
teste 'testes/teste-erro-FLOAT8.mp' retornou erro (código 1)
----------------------------------------------
rodando teste: testes/teste-erro-ID2.mp
╔════════════════════════════════════════════════════════╗
║        COMPILADOR MINIPASCAL - VERSAO COMPLETA        ║
║              Análise Lexica e Sintática               ║
╚════════════════════════════════════════════════════════╝

Arquivo fonte: testes/teste-erro-ID2.mp
Arquivo de tokens: tokens.txt

=== INICIANDO ANÁLISE LeXICA ===

1# PALAVRA_RESERVADA | program


=== INICIANDO ANALISE SINTATICA ===

1# IDENTIFICADOR | correto
1# ; | ;
2# PALAVRA_RESERVADA | var
2# IDENTIFICADOR | a_1
2# , | ,
2# NUMERO | 2

ERRO SINTÁTICO na linha 2:
  Esperado: IDENTIFICADOR
  Encontrado: NUMERO ('2')
teste 'testes/teste-erro-ID2.mp' retornou erro (código 1)
----------------------------------------------
rodando teste: testes/teste-erro-PARENTESES9.mp
╔════════════════════════════════════════════════════════╗
║        COMPILADOR MINIPASCAL - VERSAO COMPLETA        ║
║              Análise Lexica e Sintática               ║
╚════════════════════════════════════════════════════════╝

Arquivo fonte: testes/teste-erro-PARENTESES9.mp
Arquivo de tokens: tokens.txt

=== INICIANDO ANÁLISE LeXICA ===

1# PALAVRA_RESERVADA | program


=== INICIANDO ANALISE SINTATICA ===

1# IDENTIFICADOR | correto
1# ; | ;
2# PALAVRA_RESERVADA | var
2# IDENTIFICADOR | a
2# , | ,
2# IDENTIFICADOR | b
2# , | ,
2# IDENTIFICADOR | c
2# : | :
2# PALAVRA_RESERVADA | integer
2# ; | ;
3# PALAVRA_RESERVADA | var
3# IDENTIFICADOR | d
3# , | ,
3# IDENTIFICADOR | e
3# , | ,
3# IDENTIFICADOR | f
3# : | :
3# PALAVRA_RESERVADA | boolean
3# ; | ;
4# PALAVRA_RESERVADA | procedure
4# IDENTIFICADOR | proc
4# ( | (
4# PALAVRA_RESERVADA | var
4# IDENTIFICADOR | a1
4# : | :
4# PALAVRA_RESERVADA | integer
4# ) | )
4# ; | ;
5# PALAVRA_RESERVADA | var
5# IDENTIFICADOR | a
5# , | ,
5# IDENTIFICADOR | b
5# , | ,
5# IDENTIFICADOR | c
5# : | :
5# PALAVRA_RESERVADA | integer
5# ; | ;
6# PALAVRA_RESERVADA | var
6# IDENTIFICADOR | d
6# , | ,
6# IDENTIFICADOR | e
6# , | ,
6# IDENTIFICADOR | f
6# : | :
6# PALAVRA_RESERVADA | boolean
6# ; | ;
7# PALAVRA_RESERVADA | begin
8# IDENTIFICADOR | a
8# := | :=
8# NUMERO | 1
8# ; | ;
9# PALAVRA_RESERVADA | if
9# IDENTIFICADOR | a
9# < | <
9# NUMERO | 1
9# ) | )

ERRO SINTÁTICO na linha 9:
  Esperado: then
  Encontrado: ) (')')
teste 'testes/teste-erro-PARENTESES9.mp' retornou erro (código 1)
----------------------------------------------
rodando teste: testes/teste-erro-PONTOFINAL.mp
╔════════════════════════════════════════════════════════╗
║        COMPILADOR MINIPASCAL - VERSAO COMPLETA        ║
║              Análise Lexica e Sintática               ║
╚════════════════════════════════════════════════════════╝

Arquivo fonte: testes/teste-erro-PONTOFINAL.mp
Arquivo de tokens: tokens.txt

=== INICIANDO ANÁLISE LeXICA ===

1# PALAVRA_RESERVADA | program


=== INICIANDO ANALISE SINTATICA ===

1# IDENTIFICADOR | correto
1# ; | ;
2# PALAVRA_RESERVADA | var
2# IDENTIFICADOR | a
2# , | ,
2# IDENTIFICADOR | b
2# , | ,
2# IDENTIFICADOR | c
2# : | :
2# PALAVRA_RESERVADA | integer
2# ; | ;
3# PALAVRA_RESERVADA | var
3# IDENTIFICADOR | d
3# , | ,
3# IDENTIFICADOR | e
3# , | ,
3# IDENTIFICADOR | f
3# : | :
3# PALAVRA_RESERVADA | boolean
3# ; | ;
4# PALAVRA_RESERVADA | procedure
4# IDENTIFICADOR | proc
4# ( | (
4# PALAVRA_RESERVADA | var
4# IDENTIFICADOR | a1
4# : | :
4# PALAVRA_RESERVADA | integer
4# ) | )
4# ; | ;
5# PALAVRA_RESERVADA | var
5# IDENTIFICADOR | a
5# , | ,
5# IDENTIFICADOR | b
5# , | ,
5# IDENTIFICADOR | c
5# : | :
5# PALAVRA_RESERVADA | integer
5# ; | ;
6# PALAVRA_RESERVADA | var
6# IDENTIFICADOR | d
6# , | ,
6# IDENTIFICADOR | e
6# , | ,
6# IDENTIFICADOR | f
6# : | :
6# PALAVRA_RESERVADA | boolean
6# ; | ;
7# PALAVRA_RESERVADA | begin
8# IDENTIFICADOR | a
8# := | :=
8# NUMERO | 1
8# ; | ;
9# PALAVRA_RESERVADA | if
9# ( | (
9# IDENTIFICADOR | a
9# < | <
9# NUMERO | 1
9# ) | )
9# PALAVRA_RESERVADA | then
10# IDENTIFICADOR | a
10# := | :=
10# NUMERO | 12
10# ; | ;
11# PALAVRA_RESERVADA | end
11# ; | ;
12# PALAVRA_RESERVADA | begin
13# IDENTIFICADOR | a
13# := | :=
13# NUMERO | 2
13# ; | ;
14# IDENTIFICADOR | b
14# := | :=
14# NUMERO | 10
14# ; | ;
15# IDENTIFICADOR | c
15# := | :=
15# NUMERO | 11
15# ; | ;
16# IDENTIFICADOR | a
16# := | :=
16# IDENTIFICADOR | b
16# + | +
16# IDENTIFICADOR | c
16# ; | ;
17# IDENTIFICADOR | d
17# := | :=
17# PALAVRA_RESERVADA | true
17# ; | ;
18# IDENTIFICADOR | e
18# := | :=
18# PALAVRA_RESERVADA | false
18# ; | ;
19# IDENTIFICADOR | f
19# := | :=
19# PALAVRA_RESERVADA | true
19# ; | ;
20# IDENTIFICADOR | write
20# ( | (
20# IDENTIFICADOR | b
20# ) | )
20# ; | ;
21# PALAVRA_RESERVADA | if
21# ( | (
21# IDENTIFICADOR | d
21# ) | )
21# PALAVRA_RESERVADA | then
22# PALAVRA_RESERVADA | begin
23# IDENTIFICADOR | a
23# := | :=
23# NUMERO | 20
23# ; | ;
24# IDENTIFICADOR | b
24# := | :=
24# NUMERO | 10
24# * | *
24# IDENTIFICADOR | c
24# ; | ;
25# IDENTIFICADOR | c
25# := | :=
25# IDENTIFICADOR | a
25# PALAVRA_RESERVADA | div
25# IDENTIFICADOR | b
25# ; | ;
26# PALAVRA_RESERVADA | end
26# ; | ;
27# PALAVRA_RESERVADA | while
27# ( | (
27# IDENTIFICADOR | a
27# > | >
27# NUMERO | 1
27# ) | )
27# PALAVRA_RESERVADA | do
28# PALAVRA_RESERVADA | begin
29# PALAVRA_RESERVADA | if
29# ( | (
29# IDENTIFICADOR | b
29# > | >
29# NUMERO | 10
29# ) | )
29# PALAVRA_RESERVADA | then
30# IDENTIFICADOR | b
30# := | :=
30# NUMERO | 2
30# ; | ;
31# IDENTIFICADOR | a
31# := | :=
31# IDENTIFICADOR | a
31# - | -
31# NUMERO | 1
31# ; | ;
32# PALAVRA_RESERVADA | end
32# ; | ;
33# PALAVRA_RESERVADA | end
33# EOF | EOF

ERRO SINTÁTICO na linha 33:
  Esperado: .
  Encontrado: EOF ('EOF')
teste 'testes/teste-erro-PONTOFINAL.mp' retornou erro (código 1)
----------------------------------------------
rodando teste: testes/teste-erro-PONTOVIRGULA2.mp
╔════════════════════════════════════════════════════════╗
║        COMPILADOR MINIPASCAL - VERSAO COMPLETA        ║
║              Análise Lexica e Sintática               ║
╚════════════════════════════════════════════════════════╝

Arquivo fonte: testes/teste-erro-PONTOVIRGULA2.mp
Arquivo de tokens: tokens.txt

=== INICIANDO ANÁLISE LeXICA ===

1# PALAVRA_RESERVADA | program


=== INICIANDO ANALISE SINTATICA ===

1# IDENTIFICADOR | correto
1# ; | ;
2# PALAVRA_RESERVADA | var
2# IDENTIFICADOR | a
2# , | ,
2# IDENTIFICADOR | b
2# , | ,
2# IDENTIFICADOR | c
2# : | :
2# PALAVRA_RESERVADA | integer
3# PALAVRA_RESERVADA | var

ERRO SINTÁTICO na linha 3:
  Esperado: ;
  Encontrado: var ('var')
teste 'testes/teste-erro-PONTOVIRGULA2.mp' retornou erro (código 1)
----------------------------------------------
rodando teste: testes/teste-erro-PORCENTAGEM9.mp
╔════════════════════════════════════════════════════════╗
║        COMPILADOR MINIPASCAL - VERSAO COMPLETA        ║
║              Análise Lexica e Sintática               ║
╚════════════════════════════════════════════════════════╝

Arquivo fonte: testes/teste-erro-PORCENTAGEM9.mp
Arquivo de tokens: tokens.txt

=== INICIANDO ANÁLISE LeXICA ===

1# PALAVRA_RESERVADA | program


=== INICIANDO ANALISE SINTATICA ===

1# IDENTIFICADOR | correto
1# ; | ;
2# PALAVRA_RESERVADA | var
2# IDENTIFICADOR | a
2# , | ,
2# IDENTIFICADOR | b
2# , | ,
2# IDENTIFICADOR | c
2# : | :
2# PALAVRA_RESERVADA | integer
2# ; | ;
3# PALAVRA_RESERVADA | var
3# IDENTIFICADOR | d
3# , | ,
3# IDENTIFICADOR | e
3# , | ,
3# IDENTIFICADOR | f
3# : | :
3# PALAVRA_RESERVADA | boolean
3# ; | ;
4# PALAVRA_RESERVADA | procedure
4# IDENTIFICADOR | proc
4# ( | (
4# PALAVRA_RESERVADA | var
4# IDENTIFICADOR | a1
4# : | :
4# PALAVRA_RESERVADA | integer
4# ) | )
4# ; | ;
5# PALAVRA_RESERVADA | var
5# IDENTIFICADOR | a
5# , | ,
5# IDENTIFICADOR | b
5# , | ,
5# IDENTIFICADOR | c
5# : | :
5# PALAVRA_RESERVADA | integer
5# ; | ;
6# PALAVRA_RESERVADA | var
6# IDENTIFICADOR | d
6# , | ,
6# IDENTIFICADOR | e
6# , | ,
6# IDENTIFICADOR | f
6# : | :
6# PALAVRA_RESERVADA | boolean
6# ; | ;
7# PALAVRA_RESERVADA | begin
8# IDENTIFICADOR | a
8# := | :=
8# NUMERO | 1
8# ; | ;
9# PALAVRA_RESERVADA | if
9# ( | (
9# IDENTIFICADOR | a
ERRO LeXICO: caractere inválido '%' (ASCII 37) na linha 9
teste 'testes/teste-erro-PORCENTAGEM9.mp' retornou erro (código 1)
----------------------------------------------
rodando teste: testes/teste-erro-PROGRAM.mp
╔════════════════════════════════════════════════════════╗
║        COMPILADOR MINIPASCAL - VERSAO COMPLETA        ║
║              Análise Lexica e Sintática               ║
╚════════════════════════════════════════════════════════╝

Arquivo fonte: testes/teste-erro-PROGRAM.mp
Arquivo de tokens: tokens.txt

=== INICIANDO ANÁLISE LeXICA ===

1# IDENTIFICADOR | correto


=== INICIANDO ANALISE SINTATICA ===


ERRO SINTÁTICO na linha 1:
  Esperado: program
  Encontrado: IDENTIFICADOR ('correto')
teste 'testes/teste-erro-PROGRAM.mp' retornou erro (código 1)
----------------------------------------------
rodando teste: testes/teste-erro-THEN9.mp
╔════════════════════════════════════════════════════════╗
║        COMPILADOR MINIPASCAL - VERSAO COMPLETA        ║
║              Análise Lexica e Sintática               ║
╚════════════════════════════════════════════════════════╝

Arquivo fonte: testes/teste-erro-THEN9.mp
Arquivo de tokens: tokens.txt

=== INICIANDO ANÁLISE LeXICA ===

1# PALAVRA_RESERVADA | program


=== INICIANDO ANALISE SINTATICA ===

1# IDENTIFICADOR | correto
1# ; | ;
2# PALAVRA_RESERVADA | var
2# IDENTIFICADOR | a
2# , | ,
2# IDENTIFICADOR | b
2# , | ,
2# IDENTIFICADOR | c
2# : | :
2# PALAVRA_RESERVADA | integer
2# ; | ;
3# PALAVRA_RESERVADA | var
3# IDENTIFICADOR | d
3# , | ,
3# IDENTIFICADOR | e
3# , | ,
3# IDENTIFICADOR | f
3# : | :
3# PALAVRA_RESERVADA | boolean
3# ; | ;
4# PALAVRA_RESERVADA | procedure
4# IDENTIFICADOR | proc
4# ( | (
4# PALAVRA_RESERVADA | var
4# IDENTIFICADOR | a1
4# : | :
4# PALAVRA_RESERVADA | integer
4# ) | )
4# ; | ;
5# PALAVRA_RESERVADA | var
5# IDENTIFICADOR | a
5# , | ,
5# IDENTIFICADOR | b
5# , | ,
5# IDENTIFICADOR | c
5# : | :
5# PALAVRA_RESERVADA | integer
5# ; | ;
6# PALAVRA_RESERVADA | var
6# IDENTIFICADOR | d
6# , | ,
6# IDENTIFICADOR | e
6# , | ,
6# IDENTIFICADOR | f
6# : | :
6# PALAVRA_RESERVADA | boolean
6# ; | ;
7# PALAVRA_RESERVADA | begin
8# IDENTIFICADOR | a
8# := | :=
8# NUMERO | 1
8# ; | ;
9# PALAVRA_RESERVADA | if
9# ( | (
9# IDENTIFICADOR | a
9# < | <
9# NUMERO | 1
9# ) | )
9# IDENTIFICADOR | thennnn

ERRO SINTÁTICO na linha 9:
  Esperado: then
  Encontrado: IDENTIFICADOR ('thennnn')
teste 'testes/teste-erro-THEN9.mp' retornou erro (código 1)
----------------------------------------------
rodando teste: testes/teste-erro-TIPODADO2.mp
╔════════════════════════════════════════════════════════╗
║        COMPILADOR MINIPASCAL - VERSAO COMPLETA        ║
║              Análise Lexica e Sintática               ║
╚════════════════════════════════════════════════════════╝

Arquivo fonte: testes/teste-erro-TIPODADO2.mp
Arquivo de tokens: tokens.txt

=== INICIANDO ANÁLISE LeXICA ===

1# PALAVRA_RESERVADA | program


=== INICIANDO ANALISE SINTATICA ===

1# IDENTIFICADOR | correto
1# ; | ;
2# PALAVRA_RESERVADA | var
2# IDENTIFICADOR | a
2# , | ,
2# IDENTIFICADOR | b
2# , | ,
2# IDENTIFICADOR | c
2# : | :
2# IDENTIFICADOR | float

ERRO SINTÁTICO na linha 2:
  Esperado: tipo (integer ou boolean)
  Encontrado: float
teste 'testes/teste-erro-TIPODADO2.mp' retornou erro (código 1)
----------------------------------------------
rodando teste: testes/teste-erro-VAR2.mp
╔════════════════════════════════════════════════════════╗
║        COMPILADOR MINIPASCAL - VERSAO COMPLETA        ║
║              Análise Lexica e Sintática               ║
╚════════════════════════════════════════════════════════╝

Arquivo fonte: testes/teste-erro-VAR2.mp
Arquivo de tokens: tokens.txt

=== INICIANDO ANÁLISE LeXICA ===

1# PALAVRA_RESERVADA | program


=== INICIANDO ANALISE SINTATICA ===

1# IDENTIFICADOR | correto
1# ; | ;
2# IDENTIFICADOR | a

ERRO SINTÁTICO na linha 2:
  Esperado: begin
  Encontrado: IDENTIFICADOR ('a')
teste 'testes/teste-erro-VAR2.mp' retornou erro (código 1)
----------------------------------------------
rodando teste: testes/teste.mp
╔════════════════════════════════════════════════════════╗
║        COMPILADOR MINIPASCAL - VERSAO COMPLETA        ║
║              Análise Lexica e Sintática               ║
╚════════════════════════════════════════════════════════╝

Arquivo fonte: testes/teste.mp
Arquivo de tokens: tokens.txt

=== INICIANDO ANÁLISE LeXICA ===

1# PALAVRA_RESERVADA | program


=== INICIANDO ANALISE SINTATICA ===

1# IDENTIFICADOR | correto
1# ; | ;
2# PALAVRA_RESERVADA | var
2# IDENTIFICADOR | a
2# , | ,
2# IDENTIFICADOR | b
2# , | ,
2# IDENTIFICADOR | c
2# : | :
2# PALAVRA_RESERVADA | integer
2# ; | ;
3# PALAVRA_RESERVADA | var
3# IDENTIFICADOR | d
3# , | ,
3# IDENTIFICADOR | e
3# , | ,
3# IDENTIFICADOR | f
3# : | :
3# PALAVRA_RESERVADA | boolean
3# ; | ;
4# PALAVRA_RESERVADA | procedure
4# IDENTIFICADOR | proc
4# ( | (
4# PALAVRA_RESERVADA | var
4# IDENTIFICADOR | a1
4# : | :
4# PALAVRA_RESERVADA | integer
4# ) | )
4# ; | ;
5# PALAVRA_RESERVADA | var
5# IDENTIFICADOR | a
5# , | ,
5# IDENTIFICADOR | b
5# , | ,
5# IDENTIFICADOR | c
5# : | :
5# PALAVRA_RESERVADA | integer
5# ; | ;
6# PALAVRA_RESERVADA | var
6# IDENTIFICADOR | d
6# , | ,
6# IDENTIFICADOR | e
6# , | ,
6# IDENTIFICADOR | f
6# : | :
6# PALAVRA_RESERVADA | boolean
6# ; | ;
7# PALAVRA_RESERVADA | begin
8# IDENTIFICADOR | a
8# := | :=
8# NUMERO | 1
8# ; | ;
9# PALAVRA_RESERVADA | if
9# ( | (
9# IDENTIFICADOR | a
9# < | <
9# NUMERO | 1
9# ) | )
9# PALAVRA_RESERVADA | then
10# IDENTIFICADOR | a
10# := | :=
10# NUMERO | 12
10# ; | ;
11# PALAVRA_RESERVADA | end
11# ; | ;
12# PALAVRA_RESERVADA | begin
13# IDENTIFICADOR | a
13# := | :=
13# NUMERO | 2
13# ; | ;
14# IDENTIFICADOR | b
14# := | :=
14# NUMERO | 10
14# ; | ;
15# IDENTIFICADOR | c
15# := | :=
15# NUMERO | 11
15# ; | ;
16# IDENTIFICADOR | a
16# := | :=
16# IDENTIFICADOR | b
16# + | +
16# IDENTIFICADOR | c
16# ; | ;
17# IDENTIFICADOR | d
17# := | :=
17# PALAVRA_RESERVADA | true
17# ; | ;
18# IDENTIFICADOR | e
18# := | :=
18# PALAVRA_RESERVADA | false
18# ; | ;
19# IDENTIFICADOR | f
19# := | :=
19# PALAVRA_RESERVADA | true
19# ; | ;
20# IDENTIFICADOR | write
20# ( | (
20# IDENTIFICADOR | b
20# ) | )
20# ; | ;
21# PALAVRA_RESERVADA | if
21# ( | (
21# IDENTIFICADOR | d
21# ) | )
21# PALAVRA_RESERVADA | then
22# PALAVRA_RESERVADA | begin
23# IDENTIFICADOR | a
23# := | :=
23# NUMERO | 20
23# ; | ;
24# IDENTIFICADOR | b
24# := | :=
24# NUMERO | 10
24# * | *
24# IDENTIFICADOR | c
24# ; | ;
25# IDENTIFICADOR | c
25# := | :=
25# IDENTIFICADOR | a
25# PALAVRA_RESERVADA | div
25# IDENTIFICADOR | b
25# ; | ;
26# PALAVRA_RESERVADA | end
26# ; | ;
27# PALAVRA_RESERVADA | while
27# ( | (
27# IDENTIFICADOR | a
27# > | >
27# NUMERO | 1
27# ) | )
27# PALAVRA_RESERVADA | do
28# PALAVRA_RESERVADA | begin
29# PALAVRA_RESERVADA | if
29# ( | (
29# IDENTIFICADOR | b
29# > | >
29# NUMERO | 10
29# ) | )
29# PALAVRA_RESERVADA | then
30# IDENTIFICADOR | b
30# := | :=
30# NUMERO | 2
30# ; | ;
31# IDENTIFICADOR | a
31# := | :=
31# IDENTIFICADOR | a
31# - | -
31# NUMERO | 1
31# ; | ;
32# PALAVRA_RESERVADA | end
32# ; | ;
33# PALAVRA_RESERVADA | end
33# . | .
33# EOF | EOF

=== ANALISE CONCLUIDA COM SUCESSO! ===
Programa sintaticamente correto.

╔════════════════════════════════════════════════════════╗
║                  COMPILAÇAO CONCLUIDA                  ║
║           Arquivo de tokens gerado com sucesso         ║
╚════════════════════════════════════════════════════════╝
teste 'testes/teste.mp' executado com sucesso
----------------------------------------------
